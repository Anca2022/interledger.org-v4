<?php

use \Drupal\Core\Url;

/**
 * Implements hook_preprocess()
 * 
 * Preprocess theme variables for templates
 */
function interledger_preprocess(&$variables) {
  $path_logo_admin = theme_get_setting('logo.url');
  $variables['logo_path'] = $path_logo_admin;

  $request = \Drupal::request();
  $route_match = \Drupal::routeMatch();
  $page_title = \Drupal::service('title_resolver')->getTitle($request, $route_match->getRouteObject());
  $variables['current_page_title'] = $page_title;

  $status = \Drupal::requestStack()->getCurrentRequest()->attributes->get('exception');
  if ($status) {
    $status_code = $status->getStatusCode();
    $variables['error_code'] = $status_code;
  }
};

/**
 * Implements hook_preprocess_HOOK() for html
 * 
 * Add CSS classes to body element
 */
function interledger_preprocess_html(&$variables) {
  $statusCode = Drupal::request()->query->get('_exception_statuscode');
  if (isset($statusCode)) {
      $variables['attributes']['class'][] = 'page-' . $statusCode;
  }
}

/**
 * Prepares variables for the menu--main template.
 *
 * Default template: menu--main.html.twig.
 *
 * See the menu--main.html.twig template for the list of variables.
 */
function interledger_preprocess_menu__main(&$variables) {
  $language_interface = \Drupal::languageManager()->getCurrentLanguage()->getName();
  $needs_translation = strtolower($language_interface) === 'es';
  $path_to_translate = '/developers';
  $translation_path = 'developers/es';

  if ($variables['menu_name'] === 'main') {
    foreach ($variables['items'] as $key => $item) {
      if (!empty($item['below']) && is_array($item["below"])) {
        foreach ($item['below'] as $skey => $submenu) {
          if (isset($submenu['url']) && is_object($submenu['url'])) {
            $url_string = $submenu['url']->toString();
            if (str_contains($url_string, $path_to_translate) && $needs_translation) {
              $translationStr = substr_replace($url_string, $translation_path, 0, strlen($path_to_translate));
              $translationUrl = Url::fromUri('base:' . $translationStr);
              $variables['items'][$key]['below'][$skey]['url'] = $translationUrl;
            }
          }
        }
      }
    }
  }
}
